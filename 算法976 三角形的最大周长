# 给定由一些正数（代表长度）组成的数组 A，返回由其中三个长度组成的、面积不为零的三角形的最大周长。

# 如果不能形成任何面积不为零的三角形，返回 0。

题解：

class Solution(object):
    def largestPerimeter(self, A):
        """
        :type A: List[int]
        :rtype: int
        """
        self.A = A
        A.sort(reverse=True)
        for i in range(0,len(A)-2):         
            if A[i]< A[i+1]+ A[i+2]：
                return A[i]+A[i+1]+A[i+2]
        return 0  
        
个人代码：   执行用时：204 ms
            内存消耗：13.4 MB


他人的代码：执行用时：184 ms
class Solution(object):
    def largestPerimeter(self, A):
        """
        :type A: List[int]
        :rtype: int
        """
        A = sorted(A)[::-1]
        for i in range(0, len(A)-2):
            if A[i+1] + A[i+2] > A[i]:
                return A[i+1] + A[i+2] + A[i]
        return 0

#用切片方法反转数据耗时会更短一些
